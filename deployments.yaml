apiVersion: v1
kind: ConfigMap
metadata:
  name: www
  namespace: addon-config
data:
  index.php: |
    <?PHP echo "Hello"; ?>
  index.html: |
    <H1>Hello Hello !</H1>

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: echo-server
  name: echo-server
  namespace: addon-config
spec:
  replicas: 1
  selector:
    matchLabels:
      app: echo-server
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: echo-server
      name: echo-server
    spec:
      containers:
      - image: registry.access.redhat.com/rhscl/httpd-24-rhel7:2.4-212
        imagePullPolicy: IfNotPresent
        # livenessProbe:
        #   failureThreshold: 3
        #   httpGet:
        #     path: healthz
        #     port: 8443
        #     scheme: HTTPS
        #   periodSeconds: 10
        #   successThreshold: 1
        #   timeoutSeconds: 1
        name: php-apache
        ports:
        - containerPort: 8080
          protocol: TCP
        # readinessProbe:
        #   failureThreshold: 1
        #   httpGet:
        #     path: readyz
        #     port: 8443
        #     scheme: HTTPS
        #   periodSeconds: 5
        #   successThreshold: 1
        #   timeoutSeconds: 1
        resources:
          requests:
            cpu: 150m
            memory: 200Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
          seccompProfile:
            type: RuntimeDefault
          runAsNonRoot: true
        #   privileged: true
        #   # runAsUser: 0
        # startupProbe:
        #   failureThreshold: 30
        #   httpGet:
        #     path: healthz
        #     port: 8443
        #     scheme: HTTPS
        #   periodSeconds: 5
        #   successThreshold: 1
        #   timeoutSeconds: 1
        # terminationMessagePath: /dev/termination-log
        # terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/www/html
          name: www

      env:
        - name: MY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: MY_POD_SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName

      dnsPolicy: ClusterFirst

      volumes:
      - configMap:
          # defaultMode: 420
          name: www
        name: www

      # - name: etcd-client
      #   secret:
      #     defaultMode: 420
      #     secretName: etcd-client
      # - configMap:
      #     defaultMode: 420
      #     name: etcd-serving-ca
      #   name: etcd-serving-ca
      # - name: serving-cert
      #   secret:
      #     defaultMode: 420
      #     secretName: serving-cert
      # - configMap:
      #     defaultMode: 420
      #     items:
      #     - key: ca-bundle.crt
      #       path: tls-ca-bundle.pem
      #     name: trusted-ca-bundle
      #     optional: true
      #   name: trusted-ca-bundle
      # - name: encryption-config
      #   secret:
      #     defaultMode: 420
      #     optional: true
      #     secretName: encryption-config-1
      # - hostPath:
      #     path: /var/log/oauth-apiserver
      #     type: ""
      #   name: audit-dir